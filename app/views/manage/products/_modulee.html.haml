.card.card-default
  .card-header
    .card-title
      - if can? :read, modulee
        = link_to modulee.title, manage_product_modulee_path(@product, modulee.actable_id)
      - else
        = modulee.title
      = render '/manage/partials/user_actions', { product: @product, content: modulee }
  .card-body
    - if can? :update, modulee
      .row
        .col-12
          .float-right
            Add:
            = render 'manage/partials/add_new_actions', { product: @product, object: modulee, type: "module" }           
    %br
    %div{ class: [('row sortable' if can? :update, Product), ('not-sortable' if cannot? :update, Product)] }
      / Re-order by :row_order so that all the children specific to modulee are in order
      - modulee.children.order(:row_order).each do |child|
        %div{ "data-content-id": child.id, class: "#{ (['submodule', 'html'].include? child.actable_type.downcase) ? 'col-12' : 'col-6' }" }
          = render partial: child.actable_type.downcase, object: child
